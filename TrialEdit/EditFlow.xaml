<Window x:Class="TrialEdit.EditFlow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Name="Window"
        Title="Edit experiment flow" Height="850" Width="1400" MinHeight="850" MaxHeight="850" MinWidth="1400" MaxWidth="1400"
        WindowStartupLocation="CenterOwner">
    <Grid x:Name="LayoutRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25*"></ColumnDefinition>
            <ColumnDefinition Width="75*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <ScrollViewer Name="Flow" HorizontalScrollBarVisibility="Disabled" Grid.ColumnSpan="2" Margin="355,0,0,0">
            <Grid Name="Editflow" Height="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="20*"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="20*"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="20*"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="TogglePopupButton" Height="30" Width="150" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="1"
                              Background="AliceBlue" Margin="2,0,10,0">
                    <StackPanel>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Run Text="显示原始配置工作站示意图"/>
                        </TextBlock>
                        <Popup Name="myPopup" IsOpen="{Binding IsChecked,ElementName=TogglePopupButton}">
                            <Border BorderThickness="1">
                                <Image Name="preset" Width="400"/>
                            </Border>
                        </Popup>
                    </StackPanel>
                </ToggleButton>
            </Grid>
        </ScrollViewer>
        <Canvas>
            <Image Name="TipSteps" Width="30" Height="30" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="30,20"/>
            <TextBlock FontSize="20" Margin="70,20" FontFamily="Arial" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}">移液枪操作:</TextBlock>
            <ComboBox Name="Tip" FontSize="18" Foreground="#FF545454" Width="270" Height="30" BorderBrush="#FF565656" Margin="30,55"
				VerticalContentAlignment="Center" Padding="45,0,0,0" IsEditable="False" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" 
                      SelectionChanged="AddTip">
                <ComboBoxItem Content="【请选择】" Padding="65,0,0,0" Height="30"/>
                <ComboBoxItem Content="GetTip(获取枪头）" Padding="45,0,0,0" Height="30"/>
                <ComboBoxItem Content="Move(移动枪头）" Padding="50,0,0,0" Height="30"/>
                <ComboBoxItem Content="Aspiration(吸液）" Padding="50,0,0,0" Height="30"/>
                <ComboBoxItem Content="Dispense(放液）" Padding="55,0,0,0" Height="30"/>
                <ComboBoxItem Content="DiscardTip(丢弃枪头）" Padding="35,0,0,0" Height="30"/>
                <ComboBoxItem Content="Mix(吹打混匀）" Padding="55,0,0,0" Height="30"/>
                <ComboBoxItem Content="LetFlow(弃液）" Padding="55,0,0,0" Height="30"/>
            </ComboBox>
            <GridSplitter Grid.Row="1" Width="330" HorizontalAlignment="Stretch" Height="3" Canvas.Top="330"/>
            <Image Name="Gripper" Width="50" Height="50" Margin="18,340"/>
            <TextBlock FontSize="20" Margin="70,360" FontFamily="Arial" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}">抓手操作:</TextBlock>
            <ComboBox Name="Tongs" Width="270" Height="30" Margin="30,395" FontSize="18" Foreground="#FF545454" BorderBrush="#FF565656" VerticalContentAlignment="Center"
				Padding="45,0,0,0" IsEditable="False" Style="{DynamicResource ComboBoxStyle}" SelectedIndex="0" SelectionChanged="capture">
                <ComboBoxItem Content="【请选择】" Padding="60,0,0,0" Height="30"/>
                <ComboBoxItem Content="Grip(抓取新耗材）" Padding="45,0,0,0" Height="30"/>
                <ComboBoxItem Content="Release(丢弃）" Padding="50,0,0,0" Height="30"/>
            </ComboBox>
            <GridSplitter Width="330" Height="3" Canvas.Top="520"/>
            <GridSplitter Width="3" Height="1320" Canvas.Left="330"/>
            <Image Name="Seperate" Width="30" Height="30" Margin="30,540"/>
            <TextBlock FontSize="20" Margin="70,545" FontFamily="Arial" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}">磁分离：</TextBlock>
            <ComboBox Name="MS" FontSize="18" Foreground="#FF545454" Width="270" Height="30" BorderBrush="#FF565656"
				VerticalContentAlignment="Center" Padding="45,0,0,0" IsEditable="False" Style="{DynamicResource ComboBoxStyle}" SelectedIndex="0" Canvas.Left="30" Canvas.Top="579">
                <ComboBoxItem Content="【待开发...】" Padding="45,0,0,0" Height="30"/>
            </ComboBox>
            <GridSplitter Width="330" Height="3" Canvas.Top="650"/>
            <Image Name="shaker" Width="40" Height="40" Margin="30,670"/>
            <TextBlock FontSize="20" Margin="70,680" FontFamily="Arial" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}">振荡混匀:</TextBlock>
            <ComboBox Name="Mix" FontSize="18" Foreground="#FF545454" Width="270" Height="30" BorderBrush="#FF565656"
				VerticalContentAlignment="Center" Padding="45,0,0,0" IsEditable="False" 
				Style="{DynamicResource ComboBoxStyle}" Margin="30,710" SelectedIndex="0">
                <ComboBoxItem Content="【待开发...】" Padding="45,0,0,0" Height="30"/>
            </ComboBox>
            <Button Height="30" Width="200" Canvas.Top="768" Canvas.Left="60" FontSize="20" Click="delete">删除步骤</Button>
        </Canvas>
    </Grid>
    <Window.Resources>
        <!-- ToggleButton样式（折叠展开按钮） -->
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" CornerRadius="4" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FF565656">
                            <Border x:Name="splitBorder" CornerRadius="4" Width="40" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" 
                                        BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FF565656">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFF9F8F8" Offset="0"/>
                                        <GradientStop Color="#FFC6C6CA" Offset="0.75"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="9,0,0,0" Stretch="Fill" Height="12" Width="16" HorizontalAlignment="Left" Fill="#FF565656" Data="M 50,50 L 0,0 100,0 z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF565656"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="#FFADADAD"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ComboBox Template样式 -->
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" 
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
                            MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Continue" Background="#FFFFFFFF"/>
                                <!--<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                    <Grid>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">  
                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>  
                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>  
                    </Trigger>-->
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- ComboBox属性设置 -->
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FFF9F8F8" Offset="0"/>
                        <GradientStop Color="#FFC6C6CA" Offset="0.75"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#FFE4E7EC"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle}"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        </Style>
        <!-- ComboBoxItem样式 -->
        <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Back" Background="Transparent" BorderThickness="0,0,0,0" BorderBrush="#FF6A6A6A" >
                            <ContentPresenter ContentSource="{Binding Source}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="Pink"></Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="#FFCBE3FE"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
</Window>
